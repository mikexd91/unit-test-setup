[{"filePath":"C:\\Users\\jang01\\Desktop\\Internship\\testings\\eslint-karma-webpack\\app\\src\\actions\\add.js","messages":[{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":1,"column":18,"nodeType":"FunctionExpression","source":"module.exports = function (x, y) {"},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":35,"nodeType":"Program","source":"module.exports = function (x, y) {","fix":{"range":[34,36],"text":"\n"}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":2,"column":2,"nodeType":"Program","source":"\treturn x + y;"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":2,"column":2,"nodeType":"ReturnStatement","source":"\treturn x + y;","fix":{"range":[36,37],"text":"  "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":15,"nodeType":"Program","source":"\treturn x + y;","fix":{"range":[50,52],"text":"\n"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":3,"column":2,"nodeType":"Program","source":"}","fix":{"range":[53,53],"text":"\n"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":3,"column":2,"nodeType":"ExpressionStatement","source":"}","fix":{"range":[53,53],"text":";"}}],"errorCount":6,"warningCount":1,"source":"module.exports = function (x, y) {\r\n\treturn x + y;\r\n}"},{"filePath":"C:\\Users\\jang01\\Desktop\\Internship\\testings\\eslint-karma-webpack\\app\\src\\components\\MyButton.js","messages":[{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":1,"column":18,"nodeType":"FunctionDeclaration","source":"function MyButton (id) {","fix":{"range":[17,18],"text":""}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":1,"column":25,"nodeType":"Program","source":"function MyButton (id) {","fix":{"range":[24,26],"text":"\n"}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":2,"column":2,"nodeType":"ExpressionStatement","source":"\tthis.id = id;","fix":{"range":[26,27],"text":"  "}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":2,"column":2,"nodeType":"Program","source":"\tthis.id = id;"},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":2,"column":15,"nodeType":"Program","source":"\tthis.id = id;","fix":{"range":[40,42],"text":"\n"}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":3,"column":2,"nodeType":"VariableDeclaration","source":"\tvar div = document.createElement('div');","fix":{"range":[42,43],"text":"  "}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":3,"column":2,"nodeType":"Program","source":"\tvar div = document.createElement('div');"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":3,"column":2,"nodeType":"VariableDeclaration","source":"\tvar div = document.createElement('div');","fix":{"range":[43,46],"text":"let"}},{"ruleId":"vars-on-top","severity":2,"message":"All 'var' declarations must be at the top of the function scope.","line":3,"column":2,"nodeType":"VariableDeclaration","source":"\tvar div = document.createElement('div');"},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":3,"column":12,"nodeType":"Identifier","source":"\tvar div = document.createElement('div');"},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":3,"column":42,"nodeType":"Program","source":"\tvar div = document.createElement('div');","fix":{"range":[83,85],"text":"\n"}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":4,"column":2,"nodeType":"Program","source":"\tdiv.id = id;"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":4,"column":2,"nodeType":"ExpressionStatement","source":"\tdiv.id = id;","fix":{"range":[85,86],"text":"  "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":4,"column":14,"nodeType":"Program","source":"\tdiv.id = id;","fix":{"range":[98,100],"text":"\n"}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":5,"column":2,"nodeType":"ExpressionStatement","source":"\tthis.div = div;","fix":{"range":[100,101],"text":"  "}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":5,"column":2,"nodeType":"Program","source":"\tthis.div = div;"},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":5,"column":17,"nodeType":"Program","source":"\tthis.div = div;","fix":{"range":[116,118],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":6,"column":1,"nodeType":"Program","source":"","fix":{"range":[118,120],"text":"\n"}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":7,"column":2,"nodeType":"Program","source":"\tthis.addTo = function (target) {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 1 tab.","line":7,"column":2,"nodeType":"ExpressionStatement","source":"\tthis.addTo = function (target) {","fix":{"range":[120,121],"text":"  "}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":7,"column":15,"nodeType":"FunctionExpression","source":"\tthis.addTo = function (target) {"},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":7,"column":34,"nodeType":"Program","source":"\tthis.addTo = function (target) {","fix":{"range":[153,155],"text":"\n"}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":8,"column":2,"nodeType":"Program","source":"\t\ttarget.appendChild(div);"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 2 tabs.","line":8,"column":3,"nodeType":"ExpressionStatement","source":"\t\ttarget.appendChild(div);","fix":{"range":[155,157],"text":"  "}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":8,"column":27,"nodeType":"Program","source":"\t\ttarget.appendChild(div);","fix":{"range":[181,183],"text":"\n"}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 0 spaces but found 1 tab.","line":9,"column":2,"nodeType":"BlockStatement","source":"\t}","fix":{"range":[183,184],"text":""}},{"ruleId":"no-tabs","severity":2,"message":"Unexpected tab character.","line":9,"column":2,"nodeType":"Program","source":"\t}"},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":9,"column":3,"nodeType":"ExpressionStatement","source":"\t}","fix":{"range":[185,185],"text":";"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":9,"column":3,"nodeType":"Program","source":"\t}","fix":{"range":[185,187],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":10,"column":2,"nodeType":"Program","source":"}","fix":{"range":[188,190],"text":"\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'LF' but found 'CRLF'.","line":11,"column":1,"nodeType":"Program","source":"","fix":{"range":[190,192],"text":"\n"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":12,"column":27,"nodeType":"Program","source":"module.exports = MyButton;","fix":{"range":[218,218],"text":"\n"}}],"errorCount":31,"warningCount":1,"source":"function MyButton (id) {\r\n\tthis.id = id;\r\n\tvar div = document.createElement('div');\r\n\tdiv.id = id;\r\n\tthis.div = div;\r\n\r\n\tthis.addTo = function (target) {\r\n\t\ttarget.appendChild(div);\r\n\t}\r\n}\r\n\r\nmodule.exports = MyButton;"},{"filePath":"C:\\Users\\jang01\\Desktop\\Internship\\testings\\eslint-karma-webpack\\app\\src\\index.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1,"column":1,"nodeType":"MemberExpression","source":"console.log(\"Hello world\");","endLine":1,"endColumn":12},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":1,"column":13,"nodeType":"Literal","source":"console.log(\"Hello world\");","fix":{"range":[12,25],"text":"'Hello world'"}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":1,"column":28,"nodeType":"Program","source":"console.log(\"Hello world\");","fix":{"range":[27,27],"text":"\n"}}],"errorCount":2,"warningCount":1,"source":"console.log(\"Hello world\");"}]