import groovy.json.JsonSlurper;

pipeline {
	agent any

	stages {

		stage ("Setup NodeJS") {
			steps {
				nodejs(configId: '08136756-fa8c-4f4c-9bb1-516707682c34', nodeJSInstallationName: 'Node v6.10.3 - install automatically') {
				    sh 'node --version';
				}
			}
		}
		
		stage ("install") {
			steps {
				sh 'npm install';
			}
		}

		stage ("Tests") {
			steps {
				parallel (
					karma: {
						script {
							try {
								sh 'npm run test --silent';
							} catch (err) {
								echo "Karma Test Failed";
								currentBuild.result = 'FAILURE'
							} finally {
								junit 'app/test/reports/**/*.xml';

								step([$class: 'CoberturaPublisher', autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'app/test/reports/unit-test/coverage/**/*.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false])

								echo currentBuild.result
							}
						}
					},

					eslint: {
						script {
							try {
								sh 'npm run eslint';
							} catch (err) {
								echo err;
							} finally {
								checkstyle canComputeNew: false, defaultEncoding: '', healthy: '', pattern: 'app/test/reports/eslint/checkstyle/eslint-report.xml', unHealthy: '';
							}
						}
						
					}

				)
			}
		}

		stage ("report") {
			steps {

				script {
					sh "curl -X GET https://jenkins.tusisobar.com/job/pipeline_demo_Jeremiah/38/testReport/api/json?depth=0 >> ./jenkins/jenkinsInput.in" --user ci:cfe87d1aaa67ac831cc93ce3247accf7 ;

	        		sh "node ./jenkins/jsonParser.js";
				}
				


				echo "report";
			}
		}
	}

	post {
		always {
			echo "POST ACTION";
		}
		failure {

			echo "FAIL!";
		}
	}
}

